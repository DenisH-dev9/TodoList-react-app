{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","mardinBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","protoTypes","PropTypes","arrayOf","object","isRequired","func","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef9c8ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        mardinBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input \r\n                type=\"checkbox\" \r\n                checked={todo.completed}\r\n                style={styles.input} \r\n                onChange={ () => onChange(todo.id)} />\r\n            <strong>{ index + 1}</strong>\r\n            &nbsp;\r\n            {todo.title}\r\n            </span>\r\n\r\n        <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)} >&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    tod: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react' \r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem \r\n                todo={todo} \r\n                key={todo.id} \r\n                index={index} \r\n                onChange={props.onToggle} \r\n                />\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.protoTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\n\r\nexport default () => <div style={{display: 'flex', justifyContent: 'center', margin: '.5rem'}}><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen : false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true })} >Open modal</button>\r\n\r\n                {this.state.isOpen && (\r\n                <div className='modal' >\r\n                    <div className='modal-body' >\r\n                        <h1>Modal title</h1>\r\n                        <p>I am awesome modal!</p>\r\n                        <button onClick={() => this.setState({ isOpen: false })}>Close modal</button>\r\n                    </div>\r\n                </div>)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport Loader from './loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy(() => import('./Todo/AddTodo'))\n\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n        setTodos(todos)\n        setLoading(false)\n        }, 2000)\n\n      })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    })\n  )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos (todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n    <div className='wrapper'>\n      <h1>React TodoList</h1>\n    <Modal />\n\n      <React.Suspense fallback={<p>Loading....</p>}>\n        <AddTodo onCreate={addTodo} />\n      </React.Suspense>\n    \n\n    {loading && <Loader />}\n    {todos.length ? (<TodoList todos={todos} onToggle={toggleTodo} />\n    ) : loading ? null :(\n      <p>No todos!!!</p>\n    )}\n\n    </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}